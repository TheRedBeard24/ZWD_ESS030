WDEVENT X	CL_WD_CUSTOM_EVENT

method ONACTIONCDATE .
*  BREAK-POINT.
  DATA lo_nd_leave_req TYPE REF TO if_wd_context_node.

  DATA lo_el_leave_req TYPE REF TO if_wd_context_element.
  DATA ls_leave_req TYPE wd_this->element_leave_req.
  DATA lv_begda TYPE wd_this->element_leave_req-begda.

* navigate from <CONTEXT> to <LEAVE_REQ> via lead selection
  lo_nd_leave_req = wd_context->get_child_node( name = wd_this->wdctx_leave_req ).

* @TODO handle non existant child
* IF lo_nd_leave_req IS INITIAL.
* ENDIF.

* get element via lead selection
  lo_el_leave_req = lo_nd_leave_req->get_element( ).
* @TODO handle not set lead selection
  IF lo_el_leave_req IS INITIAL.
  ENDIF.

* get single attribute
  lo_el_leave_req->get_attribute(
    EXPORTING
      name =  `BEGDA`
    IMPORTING
      value = lv_begda ).

*  DATA lo_nd_leave_req TYPE REF TO if_wd_context_node.
*
*  DATA lo_el_leave_req TYPE REF TO if_wd_context_element.
*  DATA ls_leave_req TYPE wd_this->element_leave_req.
  DATA lv_endda TYPE wd_this->element_leave_req-endda.

* navigate from <CONTEXT> to <LEAVE_REQ> via lead selection
  lo_nd_leave_req = wd_context->get_child_node( name = wd_this->wdctx_leave_req ).

* @TODO handle non existant child
* IF lo_nd_leave_req IS INITIAL.
* ENDIF.

* get element via lead selection
  lo_el_leave_req = lo_nd_leave_req->get_element( ).
* @TODO handle not set lead selection
  IF lo_el_leave_req IS INITIAL.
  ENDIF.

* get single attribute
  lo_el_leave_req->get_attribute(
    EXPORTING
      name =  `ENDDA`
    IMPORTING
      value = lv_endda ).


 me->trans_date(
   CHANGING
     pa_startdate = lv_begda
     pa_dateinput = lv_endda
 ).


   DATA lo_el_context TYPE REF TO if_wd_context_element.
   DATA ls_context TYPE wd_this->element_context.
   DATA lv_dateinput TYPE wd_this->element_context-dateinput.

*  get element via lead selection
   lo_el_context = wd_context->get_element( ).

*  @TODO handle not set lead selection
   IF lo_el_context IS INITIAL.
   ENDIF.

*  @TODO fill attribute
*  lv_dateinput = 1.

*  set single attribute
   lo_el_context->set_attribute(
     name =  `DATEINPUT`
     value = lv_begda ).


*  DATA lo_el_context TYPE REF TO if_wd_context_element.
*  DATA ls_context TYPE wd_this->element_context.
  DATA lv_dateafter TYPE wd_this->element_context-dateafter.

* get element via lead selection
  lo_el_context = wd_context->get_element( ).

* @TODO handle not set lead selection
  IF lo_el_context IS INITIAL.
  ENDIF.

* @TODO fill attribute
* lv_dateafter = 1.

* set single attribute
  lo_el_context->set_attribute(
    name =  `DATEAFTER`
    value = lv_endda ).


endmethod.
